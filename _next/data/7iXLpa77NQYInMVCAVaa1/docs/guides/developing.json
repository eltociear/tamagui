{"pageProps":{"frontmatter":{"title":"Developing with Tamagui","description":"Details and helpful dev tools.","slug":"developing","readingTime":{"text":"3 min read","minutes":2.83,"time":169800,"words":566}},"code":"var Component=(()=>{var h=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var k=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),N=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},c=(a,e,t,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!g.call(a,i)&&i!==t&&l(a,i,{get:()=>e[i],enumerable:!(s=u(e,i))||s.enumerable});return a};var f=(a,e,t)=>(t=a!=null?h(m(a)):{},c(e||!a||!a.__esModule?l(t,\"default\",{value:a,enumerable:!0}):t,a)),b=a=>c(l({},\"__esModule\",{value:!0}),a);var r=k((B,o)=>{o.exports=_jsx_runtime});var x={};N(x,{default:()=>w,frontmatter:()=>y});var n=f(r()),y={title:\"Developing with Tamagui\",description:\"Details and helpful dev tools.\"};function d(a){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",div:\"div\",span:\"span\",h3:\"h3\",ul:\"ul\",li:\"li\",strong:\"strong\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:\"importing-from-react-native\",children:\"Importing from React Native\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In general either your Webpack configuration or using \",(0,n.jsx)(e.code,{children:\"@tamagui/next-plugin\"}),\", you will be aliasing \",(0,n.jsx)(e.code,{children:\"react-native\"}),\" to \",(0,n.jsx)(e.code,{children:\"react-native-web\"}),\". This means you should import anything you need from \",(0,n.jsx)(e.code,{children:\"react-native\"}),\" directly and never import for \",(0,n.jsx)(e.code,{children:\"react-native-web\"}),\". Your bundler will handle automatically changing it.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"classes-generated\",children:\"Classes generated\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Tamagui generates a few helpful classes. For components created with \",(0,n.jsx)(e.code,{children:\"styled()\"}),\" where a \",(0,n.jsx)(e.code,{children:\"name\"}),\" is set like this:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"language-tsx\",children:[(0,n.jsxs)(e.div,{\"data-line\":\"1\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" MyButton \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"styled\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"YStack\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.div,{\"data-line\":\"2\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[\"  name\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'MyButton'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.div,{\"data-line\":\"3\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[\"  backgroundColor\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'red'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.div,{\"data-line\":\"4\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Tamagui adds the classname \",(0,n.jsx)(e.code,{children:\"is_MyButton\"}),\". This is a useful escape hatch for attaching CSS to any extra component. All the default Tamagui components have their name set.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"For component that extends a Text-based component, a further classname is set of the format \",(0,n.jsx)(e.code,{children:\"font_[fontFamily]\"}),\". So if you do:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-tsx\",children:(0,n.jsxs)(e.div,{\"data-line\":\"1\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Paragraph\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"fontFamily\"}),(0,n.jsxs)(e.span,{className:\"token attr-value\",children:[(0,n.jsx)(e.span,{className:\"token punctuation attr-equals\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:'\"'}),\"$body\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:'\"'})]}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"/>\"})]}),`\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The classnames \",(0,n.jsx)(e.code,{children:\"is_Paragraph\"}),\" and \",(0,n.jsx)(e.code,{children:\"font_body\"}),\" will be output to DOM.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"debugging\",children:\"Debugging\"}),`\n`,(0,n.jsx)(e.p,{children:\"Tamagui has two three of giving you a lot more insight into what's happening at compile-time.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"debug-pragma\",children:\"Debug pragma\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To see what's being extracted, why, and every step along the optimization pipeline, add \",(0,n.jsx)(e.code,{children:\"// debug\"}),\" to the top of any file. Adding \",(0,n.jsx)(e.code,{children:\"// debug-verbose\"}),\" will show even more information, including more granular timings.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you're developing in your design system package that is built with @tamagui/build, esbuild will strip this banner. You can try using \",(0,n.jsx)(e.code,{children:\"//! debug\"}),\" (esbuild only preserves comments at the top that start with \",(0,n.jsx)(e.code,{children:\"//!\"}),\"), but still occasionally esbuild will insert a helpers above the comment, breaking it, so be sure to check the built file in \",(0,n.jsx)(e.code,{children:\"dist/jsx\"}),\".\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"debug-prop\",children:\"Debug prop\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Adding \",(0,n.jsx)(e.code,{children:\"debug\"}),\" to any Tamagui component will output a lot of information on what's going on at runtime. Use it like so:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"language-tsx\",children:[(0,n.jsxs)(e.div,{\"data-line\":\"1\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" Button \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'tamagui'\"}),`\n`]}),(0,n.jsx)(e.div,{\"data-line\":\"2\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:`\n`}),(0,n.jsxs)(e.div,{\"data-line\":\"3\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"export\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"default\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),\" \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Button\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"debug\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),(0,n.jsx)(e.span,{className:\"token plain-text\",children:\"Hello world\"}),(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Button\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"And you'll see props, styles, and a variety of variables relevant to processing them.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can do \",(0,n.jsx)(e.code,{children:'<Button debug=\"break\" />'}),\" to have it break at the beginning of rendering, or \",(0,n.jsx)(e.code,{children:'<Button debug=\"verbose\" />'}),\" to have it output more detailed debug information.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"debug-env\",children:\"DEBUG env\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you set \",(0,n.jsx)(e.code,{children:\"DEBUG=tamagui\"}),\" before your build command, you will get the full debug output of every file built. This is useful for seeing everything that's happening across every file, and especially helpful for diagnosing production issues.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"runtime-introspection\",children:\"Runtime introspection\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In development mode, Tamagui sets the variable \",(0,n.jsx)(e.code,{children:\"Tamagui\"}),\" onto \",(0,n.jsx)(e.code,{children:\"globalThis\"}),\" with a lot of helpful internals, including your entire parsed config from \",(0,n.jsx)(e.code,{children:\"tamagui.config.ts\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Beyond your config, you have:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"allSelectors\"}),\": All the selectors inserted by Tamagui (before runtime).\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"inspecting-components\",children:\"Inspecting Components\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Any \",(0,n.jsx)(e.code,{children:\"styled()\"}),\" component will have a \",(0,n.jsx)(e.code,{children:\"staticConfig\"}),\" property attached to it:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"language-tsx\",children:[(0,n.jsxs)(e.div,{\"data-line\":\"1\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" Circle \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"styled\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"Stack\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.div,{\"data-line\":\"2\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[\"  borderRadius\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"1000\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.div,{\"data-line\":\"3\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.div,{\"data-line\":\"4\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:`\n`}),(0,n.jsxs)(e.div,{\"data-line\":\"5\",className:\"highlight-line\",\"data-highlighted\":\"true\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"log\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"Circle\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"staticConfig\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"// lots of helpful information\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"componentName\"}),\" is taken from the \",(0,n.jsx)(e.code,{children:\"name\"}),\" key\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"variants\"}),\" contains the merged variants including parents.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"defaultProps\"}),\" is the extracted props left to use as defaults on the component.\"]}),`\n`]})]})}function v(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(d,a)})):d(a)}var w=v;return b(x);})();\n;return Component;"},"__N_SSG":true}